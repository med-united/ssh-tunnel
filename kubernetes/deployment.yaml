apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ssh-tunnel-certificate
  namespace: default
spec:
  dnsNames:
    - ssh-tunnel.med-united.health
  secretName: ssh-tunnel-tls
  issuerRef:
    name: letsencrypt-cluster-issuer
    kind: ClusterIssuer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh-tunnel
  labels:
    app: ssh-tunnel
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ssh-tunnel
  template:
    metadata:
      labels:
        app: ssh-tunnel
    spec:
      containers:
        - name: ssh-tunnel
          image: 765415433338.dkr.ecr.eu-central-1.amazonaws.com/ssh-tunnel:$IMAGE_TAG
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

---

kind: Service
apiVersion: v1
metadata:
  name: ssh-tunnel
spec:
  selector:
    app: ssh-tunnel
  ports:
    - port: 8080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ssh-tunnel
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/cors-allow-headers: Content-Type
    nginx.ingress.kubernetes.io/cors-allow-methods: POST, GET, OPTIONS
    nginx.ingress.kubernetes.io/cors-expose-headers: X-Custom-Header
    nginx.ingress.kubernetes.io/cors-max-age: "86400"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
    - hosts:
        - ssh-tunnel.med-united.health
      secretName: ssh-tunnel-tls
  rules:
    - host: ssh-tunnel.med-united.health
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ssh-tunnel
                port:
                  number: 8080