apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ssh-tunnel
  labels:
    app: ssh-tunnel
spec:
  serviceName: ssh-tunnel-service
  replicas: 1
  selector:
    matchLabels:
      app: ssh-tunnel
  template:
    metadata:
      labels:
        app: ssh-tunnel
    spec:
      securityContext:
        fsGroup: 5050
      containers:
        - name: ssh-tunnel
          image: 765415433338.dkr.ecr.eu-central-1.amazonaws.com/ssh-tunnel:$IMAGE_TAG
          imagePullPolicy: Always
          ports:
            - containerPort: 22
            - containerPort: 8080
          env:
            - name: BROKER_USER
              valueFrom:
                secretKeyRef:
                  name: broker-secret
                  key: user
            - name: BROKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: broker-secret
                  key: password
          volumeMounts:
            - name: ssh-tunnel-data
              mountPath: /home/jboss/.ssh
  volumeClaimTemplates:
    - metadata:
        name: ssh-tunnel-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "ssh-tunnel"
        resources:
          requests:
            storage: 50m
---

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: ssh-tunnel
provisioner: kubernetes.io/aws-ebs
volumeBindingMode: WaitForFirstConsumer

---

kind: Service
apiVersion: v1
metadata:
  name: ssh-tunnel
  annotations:
    external-dns.alpha.kubernetes.io/hostname: ssh-tunnel.med-united.health
spec:
  type: LoadBalancer
  ports:
    - port: 22
      targetPort: 22
      name: ssh
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: ssh-tunnel

---

kind: Service
apiVersion: v1
metadata:
  name: ssh-tunnel-backend
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: http
  selector:
    app: ssh-tunnel